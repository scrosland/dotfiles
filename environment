# syntax: bash
# vim: set filetype=sh:
#
# Environment
#

if uname -a | grep -q -s Microsoft; then
    WSL=$(uname -r)
    export WSL
fi

_sc_select_browser()
{
    if [ -n "${BROWSER}" ]; then
        echo "${BROWSER}"
        return
    fi
    if [ -x /usr/bin/open ]; then
        echo /usr/bin/open
    elif [ -n "${DISPLAY}" ]; then
        if [ -n "${GNOME_DESKTOP_SESSION_ID}" -a -x /usr/bin/gnome-open ]; then
            echo /usr/bin/gnome-open
        elif [ -x /usr/bin/x-www-browser ]; then
            echo /usr/bin/x-www-browser
        elif [ -x /usr/bin/xdg-open ]; then
            echo /usr/bin/xdg-open
        fi
    fi
}

BROWSER=$(_sc_select_browser)
export BROWSER
EDITOR='vim'
export EDITOR
HISTCONTROL=ignoreboth
export HISTCONTROL
LESS='-RXm'
export LESS
MACHINE_THAT_GOES_PING=1 # illumos / Solaris â€” exporting would break scripts
SCM_EDITOR='viterm'
export SCM_EDITOR

if echo "${BROWSER}" | grep -q -s '.vscode-server'; then
    VSCODE_PATH=$(echo "${BROWSER}" | sed -e 's!/helpers.*!/remote-cli!')
fi

_add_to_path_var()
{
    local varname="$1"
    local dirToAdd="$2"
    if [ -z "${dirToAdd}" ]; then
        return 1
    fi
    if [ ! -d "${dirToAdd}" ]; then
        return 1
    fi
    eval local current=\$${varname}
    local newvalue=""
    if echo ":${current}:" | grep -q -s ":${dirToAdd}:"; then
        return 0
    elif [ -n "${current}" ]; then
        newvalue="${dirToAdd}:${current}"
    else
        newvalue="${dirToAdd}"
    fi
    eval ${varname}=\"${newvalue}\"
    return 0
}

add_to_path_var()
{
    _add_to_path_var "$@" || true
    return 0
}

add_to_path_var_and_export()
{
    local varname="$1"
    if _add_to_path_var "$@"; then
        export "${varname}"
    fi
}

_extract_base_path()
{
    case "$PATH" in
    ${HOME}/*)
        return
        ;;
    esac
    # Use path_helper to reconstruct the default path from /etc/paths.d.
    # The clearing of $PATH is important as path_helper will by default append
    # the current contents of $PATH
    eval $(env -u PATH /usr/libexec/path_helper -s)
}

fix_degenerate_macos_path()
{
    # iTerm can end up with a degenerate path when started from Finder by a
    # workflow or Automator action. This is because the script which starts
    # iTerm runs as a login shell and /etc/profile will run
    # /usr/libexec/path_helper which will move any user directories to the end
    # of the path. There's a good explanation at:
    # https://checkoway.net/musings/nix/#fixing-shell-integration
    if [ "$(uname -s)" != "Darwin" ]; then
        return
    fi
    _extract_base_path
}

if [ -z "${CDPATH}" ]; then
    add_to_path_var CDPATH "/Users/Shared"
    add_to_path_var CDPATH "${HOME}"
    add_to_path_var CDPATH "${HOME}/repos"
    add_to_path_var CDPATH "${HOME}/workspace"
    add_to_path_var CDPATH "."
    VIM_CDPATH="${CDPATH}"
    export VIM_CDPATH
fi

add_to_path_var MANPATH "$HOME/.local/share/man"

fix_degenerate_macos_path

add_to_path_var PATH "/usr/local/go/bin"
add_to_path_var PATH "/usr/local/opt/ruby/bin"
add_to_path_var PATH "/opt/homebrew/opt/ruby/bin"
if [ -n "$(which ruby)" ]; then
    add_to_path_var PATH "$(ruby -e 'puts Gem.bindir()' 2>/dev/null)"
fi
add_to_path_var PATH "/opt/homebrew/bin"
add_to_path_var PATH "${GHOSTTY_BIN_DIR}"
add_to_path_var PATH "/Applications/SCM.app/Contents/Resources/scm/bin"
add_to_path_var PATH "/Applications/Visual Studio Code.app/Contents/Resources/app/bin"
add_to_path_var PATH "${HOME}/Applications/SCM.app/Contents/Resources/scm/bin"
add_to_path_var PATH "/Users/Shared/tools/scripts"
add_to_path_var PATH "${HOME}/lib/work-utils/bin"
add_to_path_var PATH "${HOME}/dotfiles/bin"
add_to_path_var PATH "${VSCODE_PATH}"
add_to_path_var PATH "${HOME}/.local/bin"
add_to_path_var PATH "${HOME}/.cargo/bin"
add_to_path_var PATH "${HOME}/go/bin"
add_to_path_var PATH "${HOME}/bin"

add_to_path_var_and_export PYTHONPATH /Users/Shared/tools/libs/python
add_to_path_var_and_export RUBYLIB /Users/Shared/tools/libs/ruby

# After $PATH has been set
if command -v code >/dev/null 2>&1; then
    # Use vscode as the visual editor
    GIT_EDITOR="code --wait"
    export GIT_EDITOR
    SCM_EDITOR="code --wait --goto" # already exported
fi
