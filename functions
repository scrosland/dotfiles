# syntax: bash
# vim: set filetype=sh:
#
# Shell functions
#

if [ -z "$PS1" ] ; then
    # not interactive
    return
fi

# ----- Functions common to sh and bash -----

# $1 = filename to convert to abs
abs_file()
{
    local file="$1"
    if [ -n "$(which ruby)" ] ; then
        ruby -we 'require "pathname" ; puts Pathname.new(ARGV.shift).realpath' "${file}"
        return
    fi
    file=$(cd $(dirname "${file}") && pwd)/$(basename "${file}")
    echo "${file}"
}

resize_terminal()
{
    local width="$1"
    local height="$2"
    local command="\033[8;${height};${width}t"
    printf "${command}"
}
alias resize-terminal=resize_terminal

# ----- platform specific functions -----

_system=$(uname -s | tr '[:upper:]' '[:lower:]')
_script="${HOME}/dotfiles/functions.${_system}"
if [ -r "${_script}" ] ; then
    . "${_script}"
fi
unset _script _system

# ----- bash specific functions -----

if [ -n "${BASH_VERSION}" ] ; then
    . "${BASH_SOURCE[0]}.bash"
    return
fi

# ----- Fallback functions for non-bash shells -----

# set terminal title
set_title()
{
    local ansititle="\033]0;${1}\007"
    echo -n "${ansititle}"
}
