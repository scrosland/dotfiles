# syntax: bash
# vim: set filetype=sh:
#
# Shell functions
#

case "$-" in
    *i*)    : ;;    # interactive
    *)      return ;;
esac

#
# Must be an interactive shell
#

# ----- Functions common to sh and bash -----

# $1 = filename to convert to abs
abs_file()
{
    local file="$1"
    if [ -n "$(which ruby)" ] ; then
        ruby -we 'require "pathname" ; puts Pathname.new(ARGV.shift).realpath' "${file}"
        return
    fi
    file=$(cd $(dirname "${file}") && pwd)/$(basename "${file}")
    echo "${file}"
}

resize_terminal()
{
    local width="$1"
    local height="$2"
    local command="\033[8;${height};${width}t"
    printf "${command}"
}

alias resize-terminal=resize_terminal

source_when_readable()
{
    local _file
    for _file in "$@" ; do
        if [ -f "${_file}" -a -r "${_file}" ] ; then
            . "${_file}"
        fi
    done
    unset _file
}

# general aliases
alias ls='ls -CF'
alias r='fc -s'

if [ -x /usr/bin/parallel-ssh -a -z "$(which pssh)" ] ; then
    alias pssh=parallel-ssh
    alias pscp=parallel-ssh
fi

if [ -z "$(which sgrep)" ] ; then
    alias sgrep='rg --no-heading --line-number --with-filename'
fi

if [ -z "$(which sha256sum)" -a -n "$(which shasum)" ] ; then
    alias sha256sum='shasum -a 256'
fi

# ----- other functions -----

source_when_readable ${HOME}/dotfiles/functions.d/functions.*

# ----- Fallback functions for non-bash shells -----

if ! type set_title >/dev/null 2>&1 ; then
    # set terminal title
    set_title()
    {
        local ansititle="\033]0;${1}\007"
        echo -n "${ansititle}"
    }
fi
