#
# vim: set filetype=sh:
#
# Bash rc
#

unset INTERACTIVE

# remember this is an interactive shell
case "$-" in
    *i*)  INTERACTIVE=1 ; export INTERACTIVE ;;
esac

# 
# Setup for running interactively.
#
if [ -n "$INTERACTIVE" ] ; then

    # shell setup
    set -o vi

    if [ -n "$BASH_VERSION" ] ; then
        # tells bash to check the window size after each command
        shopt -s checkwinsize
        # tell bash to expand directories from environment vars during
        # tab completion - this works around the annoying \$ escape bug
        # see http://askubuntu.com/questions/41891/bash-auto-complete-for-environment-variables/
        # and http://lists.gnu.org/archive/html/bug-bash/2011-02/msg00274.html
        if [ -n "`shopt | grep direxpand`" ] ; then
          shopt -s direxpand
        fi
    fi

    # if TERM is not set, sort it out
    if [ -z "$TERM" -o "$TERM" = "dumb" ] ; then
        TERM="xterm" ; export TERM      # lowest common denominator
    fi

    # look for the best "xterm" terminfo entry
    if [ "$TERM" = "xterm" ] ; then
        for info in xterm-256color xterm-debian ; do
          if infocmp "${info}" > /dev/null 2>&1
          then
              TERM=${info} ; export TERM
              break
          fi
        done
        unset info
    fi

    if [ "$TERM" = "screen-256color" ] ; then
        stty erase ^h kill ^u
    fi

    # general aliases
    alias cls='clear'
    alias ls='ls -CF'
    alias la='ls -aCF'
    alias r='fc -s'

    # save prompt set during login
    if [ -z "$PROMPT_LOGIN" ] ; then
        if [ "`uname -s 2>/dev/null`" = "Darwin" ] ; then
            PS1='\u@\h:\w\$ '
        fi
        PROMPT_LOGIN="$PS1" ; export PROMPT_LOGIN
        readonly PROMPT_LOGIN
    fi

    # change the prompt if this is a sub-shell of something else
    if [ -n "$PROMPT_LOGIN" ] ; then
        islogin=''
        bshell=$(basename "${SHELL}")
        cmd=$(ps -o 'command=' -p $$)
        arg=$(echo "${cmd}" | egrep -w -- "-l|--login")
        if [ "${cmd}" = "-${SHELL}" ] ||
           [ "${cmd}" = "-${bshell}" ] ||
           [ -n "${arg}" ] ; then
            islogin='true'
        fi
        if [ -n "$islogin" -o "$SHLVL" -eq 1 ] ; then
            PS1="$PROMPT_LOGIN"
        else
            PS1="${PROMPT_LOGIN}<${SHLVL}> "
        fi
        unset islogin cmd arg bshell
    fi

fi # endif interactive

# pull in local settings
if [ -r $HOME/.shrc.local ] ; then
    . $HOME/.shrc.local
fi
